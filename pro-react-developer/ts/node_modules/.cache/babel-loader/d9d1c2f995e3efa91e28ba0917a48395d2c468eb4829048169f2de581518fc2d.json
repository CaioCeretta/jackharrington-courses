{"ast":null,"code":"var _jsxFileName = \"/home/jorge/Estudos/Youtube/jack-harrington-courses/pro-react-developer/src/pages/StrictModeState.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\n\n/*\nIn react 18, strict mode will show us that we have a problem, it's mounting and ummounting twice, to check if our\ncomponent is resilient to unmounting, it is helping us to identify unsafe lifecycles, so when we don't clean up the\ninterval, it will cause the second watch to be called twice on purpose\n\nCorrect way of creating a stop watch \n\nA good stop watch is going to use a useEffect in the right way and return a cleanup function that will remove that remove\nthat arrow\n\nA bad stop watch is going to do the exact same thing but it will not do a cleanup\n\nA cool thing of strict mode is that it will show me this error\n \n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BadStopWatch = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    console.log('Bad useEffect');\n    setInterval(() => {\n      setCount(prev => prev + 0.1);\n    }, 100);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Bad Stopwatch: \", count.toFixed(1)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n\n// This is bad because it is not cleaning the setInterval, is leak interval everytime it gets mounted\n\n/* Good stop watch */\n_s(BadStopWatch, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = BadStopWatch;\nconst GoodStopWatch = () => {\n  _s2();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    console.log('Good useEffect');\n    const timer = setInterval(() => {\n      setCount(prev => prev + 0.1);\n    }, 100);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Good Stopwatch: \", count.toFixed(1)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n_s2(GoodStopWatch, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c2 = GoodStopWatch;\nfunction StrictModeState() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr 1fr\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(GoodStopWatch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BadStopWatch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c3 = StrictModeState;\nexport default StrictModeState;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BadStopWatch\");\n$RefreshReg$(_c2, \"GoodStopWatch\");\n$RefreshReg$(_c3, \"StrictModeState\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","BadStopWatch","_s","count","setCount","console","log","setInterval","prev","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","_c","GoodStopWatch","_s2","timer","clearInterval","_c2","StrictModeState","style","display","gridTemplateColumns","_c3","$RefreshReg$"],"sources":["/home/jorge/Estudos/Youtube/jack-harrington-courses/pro-react-developer/src/pages/StrictModeState.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n\n/*\nIn react 18, strict mode will show us that we have a problem, it's mounting and ummounting twice, to check if our\ncomponent is resilient to unmounting, it is helping us to identify unsafe lifecycles, so when we don't clean up the\ninterval, it will cause the second watch to be called twice on purpose\n\nCorrect way of creating a stop watch \n\nA good stop watch is going to use a useEffect in the right way and return a cleanup function that will remove that remove\nthat arrow\n\nA bad stop watch is going to do the exact same thing but it will not do a cleanup\n\nA cool thing of strict mode is that it will show me this error\n \n*/\n\nconst BadStopWatch = () => {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    console.log('Bad useEffect')\n    setInterval(() => {\n      setCount((prev) => prev + 0.1);\n    }, 100);\n  }, []);\n\n  return <div>Bad Stopwatch: {count.toFixed(1)}</div>\n};\n\n// This is bad because it is not cleaning the setInterval, is leak interval everytime it gets mounted\n\n/* Good stop watch */\nconst GoodStopWatch = () => {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    console.log('Good useEffect')\n    const timer = setInterval(() => {\n      setCount((prev) => prev + 0.1);\n    }, 100);\n\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n\n  return <div>Good Stopwatch: {count.toFixed(1)}</div>\n};\n\nfunction StrictModeState() {\n  return (\n    <div style={{\n      display: \"grid\",\n      gridTemplateColumns: \"1fr 1fr\"\n    }}>\n      <GoodStopWatch />\n      <BadStopWatch />\n      </div>\n  )\n}\n\nexport default StrictModeState;\n"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAG3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA,SAAAC,MAAA,IAAAC,OAAA;AAgBA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BC,WAAW,CAAC,MAAM;MAChBH,QAAQ,CAAEI,IAAI,IAAKA,IAAI,GAAG,GAAG,CAAC;IAChC,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOR,OAAA;IAAAS,QAAA,GAAK,iBAAe,EAACN,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACrD,CAAC;;AAED;;AAEA;AAAAZ,EAAA,CAfMD,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAgBlB,MAAMe,aAAa,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC1B,MAAM,CAACd,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B,MAAMY,KAAK,GAAGX,WAAW,CAAC,MAAM;MAC9BH,QAAQ,CAAEI,IAAI,IAAKA,IAAI,GAAG,GAAG,CAAC;IAChC,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACXW,aAAa,CAACD,KAAK,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOlB,OAAA;IAAAS,QAAA,GAAK,kBAAgB,EAACN,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACtD,CAAC;AAACG,GAAA,CAfID,aAAa;AAAAI,GAAA,GAAbJ,aAAa;AAiBnB,SAASK,eAAeA,CAAA,EAAG;EACzB,oBACErB,OAAA;IAAKsB,KAAK,EAAE;MACVC,OAAO,EAAE,MAAM;MACfC,mBAAmB,EAAE;IACvB,CAAE;IAAAf,QAAA,gBACAT,OAAA,CAACgB,aAAa;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjBd,OAAA,CAACC,YAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEZ;AAACW,GAAA,GAVQJ,eAAe;AAYxB,eAAeA,eAAe;AAAC,IAAAN,EAAA,EAAAK,GAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}