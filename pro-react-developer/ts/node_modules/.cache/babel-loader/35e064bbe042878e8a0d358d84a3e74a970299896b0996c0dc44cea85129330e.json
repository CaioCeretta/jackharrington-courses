{"ast":null,"code":"var _jsxFileName = \"/home/jorge/Estudos/Youtube/jack-harrington-courses/pro-react-developer/src/pages/UseEffectMistakes-1.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n/*\n  Rules\n  1 - always use the setter for the useState, you never want to set the value directly\n  2 - Always put a dependency array on useEffect, useCallback, useMemo\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UseEffectMistakes1() {\n  _s();\n  const [numbers, setNumbers] = useState([]);\n  useEffect(() => {\n    fetch('/numbers.json').then(res => res.json()).then(data => {\n      setNumbers(data);\n    });\n  }, [numbers]);\n  const output = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Numbers: \", JSON.stringify(numbers[0])]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n  return output;\n}\n_s(UseEffectMistakes1, \"NmavSJTOsQ6NXMSrAkWcN9okJRA=\");\n_c = UseEffectMistakes1;\nvar _c;\n$RefreshReg$(_c, \"UseEffectMistakes1\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UseEffectMistakes1","_s","numbers","setNumbers","fetch","then","res","json","data","output","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jorge/Estudos/Youtube/jack-harrington-courses/pro-react-developer/src/pages/UseEffectMistakes-1.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\n/*\n  Rules\n  1 - always use the setter for the useState, you never want to set the value directly\n  2 - Always put a dependency array on useEffect, useCallback, useMemo\n*/\n\nexport default function UseEffectMistakes1\n() {\n  \n  const [numbers, setNumbers] = useState([]);\n\n  \n\n  useEffect(() => {\n    fetch('/numbers.json')\n    .then(res => res.json())\n    .then(data => {\n      setNumbers(data);\n    })\n  }, [numbers])\n  \n\n  const output = (\n    <div>\n      <div>Numbers: {JSON.stringify(numbers[0])}</div>\n    </div>\n  )\n\n  return output\n    \n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAMA,eAAe,SAASC,kBAAkBA,CAAA,EACvC;EAAAC,EAAA;EAED,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAI1CC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,eAAe,CAAC,CACrBC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZL,UAAU,CAACK,IAAI,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAGb,MAAMO,MAAM,gBACVV,OAAA;IAAAW,QAAA,eACEX,OAAA;MAAAW,QAAA,GAAK,WAAS,EAACC,IAAI,CAACC,SAAS,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CACN;EAED,OAAOP,MAAM;AAEf;AAACR,EAAA,CAxBuBD,kBAAkB;AAAAiB,EAAA,GAAlBjB,kBAAkB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}